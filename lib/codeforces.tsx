import { ReactNode } from 'react'
import ReactMarkdown from 'react-markdown'
import endent from 'endent'
import rehypeRaw from 'rehype-raw'
import remarkMath from 'remark-math'
import rehypeKatex from 'rehype-katex'

export type CodeforcesTaskData = {
  code: string
  title: string
  link: string
  tags: string[]
  statement: ReactNode
  hints?: ReactNode[]
}

function markdown(strings: TemplateStringsArray, ...values: any[]) {
  return (
    <ReactMarkdown remarkPlugins={[remarkMath]} rehypePlugins={[rehypeRaw, rehypeKatex]}>
      {endent(strings, ...values)}
    </ReactMarkdown>
  )
}

const task4A: CodeforcesTaskData = {
  code: '4A',
  title: 'Арбуз',
  link: 'https://codeforces.com/problemset/problem/4/A',
  tags: ['Условия'],
  statement: markdown`
    Дано одно число $N$. Надо узнать, можно ли арбуз весом $N$ килограмм разделить на две четные части.

    Например, арбуз весом шесть килограмм можно разделить на $2+4$. Восемь килограмм — на $2+6$ или $4+4$. Семь килограмм — не получится.

    Если да — вывести \`YES\`, иначе — \`NO\`.
  `,
  hints: [
    markdown`
      Попробуйте для $N$ от 1 до 10 и посмотрите, какая получается закономерность.
    `,
    markdown`
      Для решения понадобятся: \`if\`, \`%\`, \`===\`,\`!==\`, и \`&&\`. Про все эти штуки можно почитать в справке (см. поиск).
    `,
    markdown`
      Арбуз получится поделить, если его вес а) четный и б) не равен двум. (Два можно поделить только на $1+1$.)
    `,
  ],
}

const task231A: CodeforcesTaskData = {
  code: '231A',
  title: 'Команда',
  link: 'https://codeforces.com/problemset/problem/231/A',
  tags: ['Условия', 'Цикл for'],
  statement: markdown`
    Дано число $N$. Дальше идет $N$ строк, в каждой — три числа (\`0\` или \`1\`).
    
    Надо посчитать, сколько строк содержат *хотя бы* две единицы, и вывести их суммарное количество. Например:
      * \`0 0 1\` — не считается,
      * \`1 0 1\` — считается,
      * \`1 1 1\` — считается.
  `,
  hints: [
    markdown`
      Создайте переменную, в которой будет храниться количество хороших строк. Дальше читайте строки одну за одной с помощью цикла \`for\`. Если строка хорошая, увеличивайте переменную.
    `,
    markdown`
      Есть два способа проверить, хорошая ли строка:
        * можно написать условие вроде "если первое и второе число равны единице, или второе и третье, или первое и третье",
        * или можно просто сложить числа и посмотреть на их сумму.
    `,
  ],
}

const task282A: CodeforcesTaskData = {
  code: '282A',
  title: 'Bit++',
  link: 'https://codeforces.com/problemset/problem/282/A',
  tags: ['Условия', 'Цикл for'],
  statement: markdown`
    Есть переменная X, в которой в начале записан ноль.

    Еще есть четыре команды:
      * \`++X\` или \`X++\` — увеличить X на единицу,
      * \`--X\` или \`X--\` — уменьшить X на единицу.
    
    Никакой разницы между \`++X\` и \`X++\` нет, аналогично для \`--X\` и \`X--\`.
    
    Надо выполнить все команды и вывести значение X в конце.
  `,
  hints: [
    markdown`
      Создайте переменную, читайте команды в цикле \`for\` и выполняйте их.
    `,
    markdown`
      Чтобы выполнить команду, можно просто написать \`if\`. Например, \`if (s === '++X') { x++ }\`.
    `,
  ],
}

const task758A: CodeforcesTaskData = {
  code: '758A',
  title: 'Праздник равенства',
  link: 'https://codeforces.com/problemset/problem/758/A',
  tags: ['Цикл for'],
  statement: markdown`
    Дано $N$ чисел. Каждое число обозначает, сколько у какого-то человека есть денег.
    
    Мы хотим подарить этим людям еще денег так, чтобы у всех стало денег поровну. Сколько денег придется потратить?
  `,
  hints: [
    markdown`
      Найдем максимум $M$, который у кого-то есть. Тогда всем остальным надо дать столько денег, чтобы у них тоже стало $M$ денег.
    `,
    markdown`
      Чтобы найти максимум в массиве, можно написать \`Math.max(...arr)\`, где \`arr\` — массив.

      Дальше есть два варианта:
        * можно пройтись по массиву и вести счетчик, сколько денег нам в итоге придется дать;
        * либо посчитать $N \\times M$ и вычесть из него сумму чисел в массиве, которую можно найти циклом или с помощью \`arr.reduce((a, b) => a + b)\`.
    `,
  ],
}

const task271A: CodeforcesTaskData = {
  code: '271A',
  title: 'Красивый год',
  link: 'https://codeforces.com/problemset/problem/271/A',
  tags: ['Цикл for', 'Условия'],
  statement: markdown`
    Дано целое число $N$ от $1000$ до $9000$.

    Найдите минимальное число, которое больше $N$ и в котором все цифры различны.
  `,
  hints: [
    markdown`
      Достаточно сделать цикл \`for\` или \`while\`, который будет начинаться с $N+1$. И выдать первое найденное число, в котором все цифры различны.
    `,
    markdown`
      Как узнать, что все цифры различны? Есть несколько способов:

      * можно перевести число в строку и проверить, что каждый символ в строке не встречается нигде после себя — для этого понадобятся \`.slice\` и \`.includes\`;
      * можно проверить для всех цифр от 0 до 9, что каждая встречается в числе не больше одного раза — для этого тоже надо будет перевести число в строку, а потом пройтись по ней циклом для каждой цифры;
      * наконец, можно воспользоваться \`Set\` — добавить все цифры в него, а потом проверить, что размер множества равен 4. Но для этого надо знать, что такое \`Set\`.
    `,
  ],
}

const task339A: CodeforcesTaskData = {
  code: '339A',
  title: 'Математика спешит на помощь',
  link: 'https://codeforces.com/problemset/problem/339/A',
  tags: ['Строки'],
  statement: markdown`
    Дана строка вида \`2+1+3+1+3\` (чисел может быть и больше пяти).

    Надо отсортировать числа по возрастанию. Например, из строки выше получится \`1+1+2+3+3\`.

    Числа в строке могут быть только \`1\`, \`2\` и \`3\`. Пробелов в строке нет.
  `,
  hints: [
    markdown`
      Есть два способа.
      
      1. Можно решить простыми операциями (\`.split\`, \`.join\`, \`.sort\`). Но для этого надо знать эти простые операции.

      2. Можно посчитать, сколько в строке единиц, двоек и троек (с помощью трех переменных), а потом вывести нужное количество цифр с помощью \`for\`.
    `,
  ],
}

const task71A: CodeforcesTaskData = {
  code: '71A',
  title: 'Слишком длинные слова',
  link: 'https://codeforces.com/problemset/problem/71/A',
  tags: ['Условия', 'Строки', 'Цикл for'],
  statement: markdown`
    Дано несколько строк, в каждой — одно слово.

    Если в слове 10 символов или меньше, надо просто вывести само слово. Если больше — надо вывести первую и последнюю букву, а между ними — количество букв посередине.

    Например, вместо слова \`multitasking\` надо вывести \`m10g\`, потому что между \`m\` и \`g\` находится 10 букв.
  `,
  hints: [
    markdown`
      Чтобы узнать длину слова в переменной \`s\`, можно написать \`s.length\`.
    `,
    markdown`
      Первая буква слова — это \`s[0]\`. Последняя — \`s[s.length-1]\`.
    `,
    markdown`
      Склеить несколько вещей в одну строчку можно с помощью \`+\`.

      Но надо аккуратно. Например, если написать \`s[0] + s.length-2 + s[s.length-1]\`, получится \`NaN\`. Чтобы заработало, надо поставить скобки вокруг \`s.length-2\`.
    `,
  ],
}

const task1512A: CodeforcesTaskData = {
  code: '1512A',
  title: 'Шпион обнаружен!',
  link: 'https://codeforces.com/problemset/problem/1512/A',
  tags: ['Массивы', 'Условия', 'Цикл for'],
  statement: markdown`
    Дано несколько наборов чисел.
    
    В каждом наборе все числа одинаковые, кроме одного. Надо вывести номер этого числа (нумерация с 1).

    Например, когда даны числа \`3 3 3 10\`, надо вывести \`4\`, потому что отличается четвертое число.
  `,
  hints: [
    markdown`
      Чтобы найти отличающееся число, достаточно один раз пройтись по массиву циклом \`for\`.
    `,
    markdown`
      Можно точно узнать, отличающееся ли число, если сравнить его с соседями слева и справа.
    `,
  ],
}

const task479A: CodeforcesTaskData = {
  code: '479A',
  title: 'Выражение',
  link: 'https://codeforces.com/problemset/problem/479/A',
  tags: ['Математика'],
  statement: markdown`
    Даны числа $A, B, C$. Между ними можно ставить скобки и знаки $+$ и $*$. Надо вывести максимальное число, которое можно получить таким образом.

    Менять числа местами нельзя. Знаки $-$ и $/$ (вычитание и деление) использовать тоже нельзя.

    Например:
    * для чисел $1, 2, 3$ — максимальное выражение $(1+2)*3$ — ответ $9$;
    * для чисел $2, 10, 3$ — максимальное выражение $2*10*3$ — ответ $60$.
  `,
  hints: [
    markdown`
      Здесь достаточно мало вариантов. Можно просто написать все и выбрать максимум.
    `,
  ],
}

const task1716A: CodeforcesTaskData = {
  code: '1716A',
  title: '2-3 ходы',
  link: 'https://codeforces.com/problemset/problem/1716/A',
  tags: ['Математика'],
  statement: markdown`
    Вы сейчас в точке $0$, надо попасть в точку $N$. Можно перемещаться на $2$ или $3$ влево или вправо. Сколько минимально ходов надо сделать?

    Другими словами: если $2 a + 3 b = N$, надо минимизировать $a + b$.
  `,
  hints: [
    markdown`
      Три хода на $2$ всегда можно заменить на два хода на $3$.
    `,
  ],
}

const task58A: CodeforcesTaskData = {
  code: '58A',
  title: 'Чат',
  link: 'https://codeforces.com/problemset/problem/58/A',
  tags: ['Строки'],
  statement: markdown`
    Дана строка. Надо узнать, можно ли убрать из нее какие-то символы так, чтобы в итоге осталось слово \`hello\`.

    Например, для строк 
      <code style="font-size:115%"><u>h</u>a<u>e</u>a<u>l</u>a<u>l</u>a<u>o</u>a</code> или
      <code style="font-size:115%">a<u>h</u>h<u>e</u><u>l</u><u>l</u>lll<u>o</u>ou</code>
    ответ \`YES\`. (Подчеркнутое — символы, которые надо оставить.)
    
    Для строки 
      <code style="font-size:115%">hlelo</code>
    ответ \`NO\`.
  `,
  hints: [
    markdown`
      Есть два способа — а) с помощью обычных операций на строках, б) через регулярные выражения.

      С регулярными выражениями задача решается очень просто. Без них — придется написать несколько строчек кода.
    `,
    markdown`
      Решение без регулярных выражений выглядит так: будем искать буквы \`h\`, \`e\`, \`l\`, \`l\`, \`o\` по очереди. Когда мы нашли очередную букву, следующую можно искать только после нее в строке (а не с самого начала).

      Для такого решения понадобятся:
        * либо цикл \`for\` (который ходит по данной строке) и переменная, которая будет хранить текущую позицию в слове \`hello\`;
        * либо методы \`.indexOf\` и \`.slice\`.
    `,
  ],
}

const task189A: CodeforcesTaskData = {
  code: '189A',
  title: 'Разрежь ленточку',
  link: 'https://codeforces.com/problemset/problem/189/A',
  tags: ['Строки'],
  statement: markdown`
    Даны числа $N$ (сумма) и $A, B, C$ (возможные слагаемые). Все числа положительные. $N$ не больше 4000.

    Надо найти **максимальное** количество слагаемых, на которые можно разбить $N$. Гарантируется, что это всегда можно сделать.

    Например:
      * если надо разбить 10 на 1, 2, 5, то ответ — 10 (десять единичек);
      * если надо разбить 10 на 5, 4, 3, то ответ — 3 (3+3+4).
    
    Саму сумму выдавать не нужно. Только максимальное количество слагаемых.
  `,
  hints: [
    markdown`
      В этой задаче важно то, что $N$ не очень большое. Ее можно решить без математики.
    `,
    markdown`
      Есть два решения.
      
      Для одного придется перебрать $N \\times N$ комбинаций (в худшем случае 16 миллионов, компьютер успеет).
      
      Для другого — хватит одного цикла, который будет проходить до $N$, но его сложнее придумать. В общем случае это называется "метод динамического программирования".
    `,
    markdown`
      Если хотите решить задачу методом динамического программирования, то подумайте вот о чем: 
      
      _Если бы у вас уже были ответы для всех сумм от $1$ до какого-то $K$, как бы вы могли их использовать, чтобы узнать ответ для суммы $K+1$?_
    `,
  ],
}

const task489C: CodeforcesTaskData = {
  code: '489C',
  title: 'Даны длина и сумма цифр...',
  link: 'https://codeforces.com/problemset/problem/489/C',
  tags: [],
  statement: markdown`
    Даны числа $M$ (от $1$ до $100$) и $S$ (от $0$ до $900$).
    
    Найдите наименьшее и наибольшее число, в которых будет $M$ цифр и сумма цифр $S$. Если таких чисел нет, то выведите \`-1 -1\`.

    Например:
      * если $M=2$ и $S=15$, то ответ — $69$ и $96$;
      * если $M=3$ и $S=9$, то ответ — $108$ и $900$.

    Ведущие нули запрещены. Например, $017$ не считается. (Просто $0$ — это ок.)
  `,
  hints: [
    markdown`
      Эту задачу можно решить двумя способами:

        * либо жадным алгоритмом — строим число цифра за цифрой;
        * либо динамическим программированием — для всех $M$ и $S$ считаем ответы, используя уже найденные ответы для меньших $M$ и $S$.

        Жадный алгоритм здесь написать проще.
    `,
    markdown`
      Если решать жадным алгоритмом, то стройте число с начала (с самой значимой цифры).
    `,
    markdown`
      В решении пригодится функция, которая бы отвечала на вопрос "Для конкретной длины и суммы, существует ли вообще последовательность цифр с такой длиной и суммой?".
    `,
  ],
}

export const codeforcesTasks: CodeforcesTaskData[] = [
  task4A, // Арбуз
  task231A, // Команда
  task71A, // Слишком длинные слова
  task282A, // Bit++
  task758A, // Праздник равенства
  task271A, // Красивый год
  task339A, // Математика спешит на помощь
  task1512A, // Шпион обнаружен!
  task479A, // Выражение
  task1716A, // 2-3 ходы
  task58A, // Чат
  task189A, // Разрежь ленточку
  task489C, // Даны длина и сумма цифр...
]
