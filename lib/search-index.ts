const jsReference = [
  {
    category: 'JS',
    title: 'Оператор =',
    subtitle: 'Изменяет переменную',
    link: '/js/ref#assign',
  },
  {
    category: 'JS',
    title: 'Операторы ++ и --',
    subtitle: 'Увеличивают и уменьшают на 1',
    link: '/js/ref#inc-dec',
  },
  {
    category: 'JS',
    title: 'Операторы +=, -=, *=, /=',
    link: '/js/ref#autoassign',
  },
  {
    category: 'JS',
    title: 'Оператор %',
    subtitle: 'Остаток от деления',
    link: '/js/ref#modulo',
  },
  {
    category: 'JS',
    title: 'Операторы === и !==',
    subtitle: 'Равно и не равно',
    link: '/js/ref#eq-neq',
  },
  {
    category: 'JS',
    title: 'Разница между === и ==, !== и !=',
    subtitle: 'Одни проверяют типы, а вторые нет',
    link: '/js/ref#eqeqeq',
  },
  {
    category: 'JS',
    title: 'Операторы >, <, >=, <=',
    subtitle: 'Больше / меньше',
    link: '/js/ref#less-more',
  },
  {
    category: 'JS: Math',
    title: 'Math.floor',
    subtitle: 'Округление вниз',
    link: '/js/ref#floor',
  },
  {
    category: 'JS: Math',
    title: 'Math.ceil',
    subtitle: 'Округление вверх',
    link: '/js/ref#ceil',
  },
  {
    category: 'JS: Math',
    title: 'Math.round',
    subtitle: 'Округление к ближайшему целому',
    link: '/js/ref#round',
  },
  {
    category: 'JS: Math',
    title: 'Math.trunc',
    subtitle: 'Отрезает дробную часть',
    link: '/js/ref#trunc',
  },
  {
    category: 'JS',
    title: 'let',
    subtitle: 'Объявляет переменную',
    link: '/js/ref#let',
  },
  {
    category: 'JS',
    title: 'if',
    subtitle: 'Проверяет условие',
    link: '/js/ref#if',
  },
  {
    category: 'JS',
    title: 'if ... else',
    link: '/js/ref#if-else',
  },
  {
    category: 'JS',
    title: 'for',
    subtitle: 'Цикл со счётчиком',
    link: '/js/ref#for',
  },
  {
    category: 'JS',
    title: 'function',
    subtitle: 'Объявляет функцию',
    link: '/js/ref#function',
  },
  {
    category: 'JS',
    title: 'return',
    subtitle: 'Возвращает значение из функции',
    link: '/js/ref#return',
  },
  // external
  {
    category: 'JS',
    title: 'break',
    subtitle: 'Прерывает цикл',
    link: 'https://itproger.com/spravka/javascript/break',
  },
  {
    category: 'JS',
    title: 'continue',
    subtitle: 'Переходит к следующей итерации цикла',
    link: 'https://itproger.com/spravka/javascript/continue',
  },
  {
    category: 'JS',
    title: 'alert',
    subtitle: 'Выдает окно с сообщением',
    link: 'https://itproger.com/spravka/javascript/alert',
  },
  {
    category: 'JS',
    title: 'prompt',
    subtitle: 'Выдает окно с полем ввода',
    link: 'https://itproger.com/spravka/javascript/prompt',
  },
  {
    category: 'JS',
    title: 'setInterval',
    subtitle: 'Делает что-то каждые N миллисекунд',
    link: 'https://itproger.com/spravka/javascript/set-interval',
  },
  {
    category: 'JS',
    title: 'delete',
    subtitle: 'Удаляет свойство объекта',
    link: 'https://itproger.com/spravka/javascript/delete',
  },
  {
    category: 'JS',
    title: 'while',
    subtitle: 'Самый простой вариант цикла',
    link: 'https://itproger.com/spravka/javascript/while',
  },
  {
    category: 'JS',
    title: 'do ... while',
    subtitle: 'Цикл с проверкой в конце',
    link: 'https://itproger.com/spravka/javascript/do-while',
  },
  {
    category: 'JS',
    title: 'switch',
    subtitle: 'Как if, но для нескольких вариантов',
    link: 'https://learn.javascript.ru/switch',
  },
  {
    category: 'JS',
    title: 'var',
    subtitle: 'Устаревший вариант let',
    link: 'https://learn.javascript.ru/var',
  },
  {
    category: 'JS',
    title: 'Условный (тернарный) оператор ?',
    subtitle: 'Как if, но работает как выражение',
    link: 'https://learn.javascript.ru/ifelse#uslovnyy-operator',
  },
  {
    category: 'JS',
    title: 'Анонимные функции () => ...',
    link: 'https://learn.javascript.ru/arrow-functions-basics',
  },
  {
    category: 'JS: Object',
    title: 'Object.keys, Object.values, Object.entries',
    subtitle: 'Перебор свойств объекта',
    link: 'https://learn.javascript.ru/keys-values-entries',
  },
  {
    category: 'JS: JSON',
    title: 'JSON.stringify',
    link: 'https://learn.javascript.ru/json',
  },
  {
    category: 'JS: JSON',
    title: 'JSON.parse',
    link: 'https://learn.javascript.ru/json#json-parse',
  },
  {
    category: 'JS',
    title: 'typeof',
    subtitle: 'Возвращает тип значения',
    link: 'https://learn.javascript.ru/types#type-typeof',
  },
  {
    category: 'JS',
    title: 'BigInt',
    subtitle: 'Работа с большими числами',
    link: 'https://learn.javascript.ru/bigint',
  },
  {
    category: 'JS',
    title: '\\n и эскейпинг',
    link: 'https://learn.javascript.ru/string#spetssimvoly',
  },
  {
    category: 'JS',
    title: 'Оператор ||',
    subtitle: '"Или"',
    link: 'https://learn.javascript.ru/logical-operators#ili',
  },
  {
    category: 'JS',
    title: 'Оператор &&',
    subtitle: '"И"',
    link: 'https://learn.javascript.ru/logical-operators#i',
  },
  {
    category: 'JS',
    title: 'Оператор !',
    subtitle: '"Не"',
    link: 'https://learn.javascript.ru/logical-operators#ne',
  },
  {
    category: 'JS: Date',
    title: 'new Date()',
    subtitle: 'Создает дату и время или возвращает текущие',
    link: 'https://learn.javascript.ru/date#sozdanie',
  },
  {
    category: 'JS',
    title: 'parseInt и parseFloat',
    subtitle: 'Перевод строки в число',
    link: 'https://learn.javascript.ru/number#parseint-i-parsefloat',
  },
  {
    category: 'JS: Number',
    title: '.toString',
    subtitle: 'Перевод числа в строку',
    link: 'https://learn.javascript.ru/number#parseint-i-parsefloat',
  },
  {
    category: 'JS: Number',
    title: '.toFixed',
    subtitle: 'Перевод числа в строку с округлением до N знаков',
    link: 'https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed',
  },
  {
    category: 'JS',
    title: 'isNaN',
    link: 'https://learn.javascript.ru/number#proverka-isfinite-i-isnan',
  },
  {
    category: 'JS: вопросы',
    title: 'Что такое "e" в числах?',
    link: 'https://learn.javascript.ru/number#sposoby-zapisi-chisla',
  },
  {
    category: 'JS: String',
    title: '.toLowerCase и .toUpperCase',
    subtitle: 'Делает буквы маленькими / большими',
    link: 'https://learn.javascript.ru/string#izmenenie-registra',
  },
  {
    category: 'JS: вопросы',
    title: 'В чем разница между одинарными (\') и двойными (") кавычками?',
    subtitle: 'Ни в чем',
    link: 'https://learn.javascript.ru/string#kavychki',
  },
  {
    category: 'JS: String',
    title: '.length',
    subtitle: 'Длина строки',
    link: 'https://learn.javascript.ru/string#dlina-stroki',
  },
  {
    category: 'JS',
    title: 'try ... catch',
    subtitle: 'Ловит ошибки',
    link: 'https://learn.javascript.ru/try-catch',
  },
  {
    category: 'JS: String',
    title: '.slice',
    subtitle: 'Возвращает часть строки',
    link: 'https://learn.javascript.ru/string#poluchenie-podstroki',
  },
  {
    category: 'JS: Array',
    title: 'Array.isArray',
    subtitle: 'Определяет, является ли значение массивом',
    link: 'https://learn.javascript.ru/array-methods#array-isarray',
  },
  {
    category: 'JS: Array',
    title: '.map',
    subtitle: 'Применяет функцию к каждому элементу массива',
    link: 'https://learn.javascript.ru/array-methods#map',
  },
  {
    category: 'JS: Array',
    title: '.sort',
    subtitle: 'Сортирует массив',
    link: 'https://learn.javascript.ru/array-methods#sort-fn',
  },
  {
    category: 'JS: Array',
    title: '.reverse',
    subtitle: 'Делает массив в обратном порядке',
    link: 'https://learn.javascript.ru/array-methods#reverse',
  },
  {
    category: 'JS: String',
    title: '.split',
    subtitle: 'Разбивает строку (например, по пробелу или запятой)',
    link: 'https://learn.javascript.ru/array-methods#split-i-join',
  },
  {
    category: 'JS: Array',
    title: '.join',
    subtitle: 'Склеивает массив в строку',
    link: 'https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/join',
  },
  {
    category: 'JS: Array',
    title: '.some',
    subtitle: 'Есть ли в массиве элемент, удовлетворяющий условию?',
    link: 'https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/some',
  },
  {
    category: 'JS: Array',
    title: '.every',
    subtitle: 'Правда ли, что в массиве все элементы удовлетворяют условию?',
    link: 'https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/every',
  },
  {
    category: 'JS: Array',
    title: '.push',
    subtitle: 'Добавляет элемент в конец массива',
    link: 'https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/push',
  },
  {
    category: 'JS: Array',
    title: '.pop',
    subtitle: 'Удаляет последний элемент массива',
    link: 'https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/pop',
  },
  {
    category: 'JS: Array',
    title: '.unshift',
    subtitle: 'Добавляет элемент в начало массива',
    link: 'https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift',
  },
  {
    category: 'JS: Array',
    title: '.shift',
    subtitle: 'Удаляет первый элемент массива',
    link: 'https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/shift',
  },
]

// NB: all are V8 errors
const jsErrors = [
  {
    category: 'Ошибки (JS)',
    title: 'SyntaxError: Identifier ... has already been declared',
    subtitle: 'Нельзя объявлять переменную дважды',
    link: '/js/ref#identifier-has-already-been-declared',
  },
  {
    category: 'Ошибки (JS)',
    title: 'ReferenceError: math is not defined',
    subtitle: 'Math должно быть с большой буквы',
    link: '/js/ref#math-is-not-defined',
  },
  {
    category: 'Ошибки (JS)',
    title: 'SyntaxError: Invalid left-hand side in assignment',
    link: '/js/ref#invalid-left-hand-side-in-assignment',
  },
]

export const searchIndex: { category: string; title: string; subtitle?: string; link: string }[] = [
  ...jsReference,
  ...jsErrors,
]
